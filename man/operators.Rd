% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{operators}
\alias{operators}
\alias{*,RsparseMatrix,sparseMatrix-method}
\alias{*,RsparseMatrix,matrix-method}
\alias{+,RsparseMatrix,sparseMatrix-method}
\alias{-,RsparseMatrix,sparseMatrix-method}
\alias{*,RsparseMatrix,integer-method}
\alias{*,RsparseMatrix,numeric-method}
\alias{*,RsparseMatrix,logical-method}
\alias{/,RsparseMatrix,integer-method}
\alias{/,RsparseMatrix,numeric-method}
\alias{/,RsparseMatrix,logical-method}
\alias{\%/\%,RsparseMatrix,integer-method}
\alias{\%/\%,RsparseMatrix,numeric-method}
\alias{\%/\%,RsparseMatrix,logical-method}
\alias{\%\%,RsparseMatrix,integer-method}
\alias{\%\%,RsparseMatrix,numeric-method}
\alias{\%\%,RsparseMatrix,logical-method}
\alias{^,RsparseMatrix,integer-method}
\alias{^,RsparseMatrix,numeric-method}
\alias{^,RsparseMatrix,logical-method}
\alias{&,RsparseMatrix,logical-method}
\alias{|,RsparseMatrix,logical-method}
\title{Mathematical operators on CSR matrices}
\usage{
\S4method{*}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,matrix}(e1, e2)

\S4method{+}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{-}{RsparseMatrix,sparseMatrix}(e1, e2)

\S4method{*}{RsparseMatrix,integer}(e1, e2)

\S4method{*}{RsparseMatrix,numeric}(e1, e2)

\S4method{*}{RsparseMatrix,logical}(e1, e2)

\S4method{/}{RsparseMatrix,integer}(e1, e2)

\S4method{/}{RsparseMatrix,numeric}(e1, e2)

\S4method{/}{RsparseMatrix,logical}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%/\%}{RsparseMatrix,logical}(e1, e2)

\S4method{\%\%}{RsparseMatrix,integer}(e1, e2)

\S4method{\%\%}{RsparseMatrix,numeric}(e1, e2)

\S4method{\%\%}{RsparseMatrix,logical}(e1, e2)

\S4method{^}{RsparseMatrix,integer}(e1, e2)

\S4method{^}{RsparseMatrix,numeric}(e1, e2)

\S4method{^}{RsparseMatrix,logical}(e1, e2)

\S4method{&}{RsparseMatrix,logical}(e1, e2)

\S4method{|}{RsparseMatrix,logical}(e1, e2)
}
\arguments{
\item{e1}{A CSR matrix.}

\item{e2}{Right-hand side of the operation. Must be a scalar (otherwise the
matrix will get converted to CSC and will call the corresponding operator
from the `Matrix` package.)}
}
\value{
A CSR matrix of class `dgRMatrix` (`lgRMatrix` for some of the logical
operators).
}
\description{
Implements some mathematical operators for CSR matrices
(a.k.a. RsparseMatrix) for cases in which the right-hand side is a constant
and the operation reduces to applying the operator elementwise on the non-zero
entries only, doing so without converting the matrix to CSC in the process.
}
\examples{
library(Matrix)
library(rsparse)
set.seed(1)
X = as.csr.matrix(rsparsematrix(4, 3, .5))
X + X
X * 2
X ^ 2
### here the result will be CSC
X ^ c(1,2)
}
